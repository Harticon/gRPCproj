// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/proto.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	proto/proto.proto

It has these top-level messages:
	User
	Token
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Token struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*Token)(nil), "user.Token")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RouteGuide service

type RouteGuideClient interface {
	SignUp(ctx context.Context, in *User, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	SignIn(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error)
}

type routeGuideClient struct {
	cc *grpc.ClientConn
}

func NewRouteGuideClient(cc *grpc.ClientConn) RouteGuideClient {
	return &routeGuideClient{cc}
}

func (c *routeGuideClient) SignUp(ctx context.Context, in *User, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/user.RouteGuide/SignUp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeGuideClient) SignIn(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := grpc.Invoke(ctx, "/user.RouteGuide/SignIn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RouteGuide service

type RouteGuideServer interface {
	SignUp(context.Context, *User) (*google_protobuf.Empty, error)
	SignIn(context.Context, *User) (*Token, error)
}

func RegisterRouteGuideServer(s *grpc.Server, srv RouteGuideServer) {
	s.RegisterService(&_RouteGuide_serviceDesc, srv)
}

func _RouteGuide_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteGuideServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.RouteGuide/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteGuideServer).SignUp(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteGuide_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteGuideServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.RouteGuide/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteGuideServer).SignIn(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteGuide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.RouteGuide",
	HandlerType: (*RouteGuideServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _RouteGuide_SignUp_Handler,
		},
		{
			MethodName: "SignIn",
			Handler:    _RouteGuide_SignIn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/proto.proto",
}

func init() { proto.RegisterFile("proto/proto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x07, 0x93, 0x7a, 0x60, 0x52, 0x88, 0xa5, 0xb4, 0x38, 0xb5, 0x48, 0x4a, 0x3a, 0x3d,
	0x3f, 0x3f, 0x3d, 0x27, 0x15, 0x22, 0x93, 0x54, 0x9a, 0xa6, 0x9f, 0x9a, 0x5b, 0x50, 0x52, 0x09,
	0x51, 0xa2, 0x64, 0xc1, 0xc5, 0x12, 0x5a, 0x9c, 0x5a, 0x24, 0x24, 0xc2, 0xc5, 0x9a, 0x9a, 0x9b,
	0x98, 0x99, 0x23, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe1, 0x08, 0x49, 0x71, 0x71, 0x14,
	0x24, 0x16, 0x17, 0x97, 0xe7, 0x17, 0xa5, 0x48, 0x30, 0x81, 0x25, 0xe0, 0x7c, 0x25, 0x59, 0x2e,
	0xd6, 0x90, 0xfc, 0xec, 0xd4, 0x3c, 0x90, 0xd6, 0x12, 0x10, 0x03, 0xa6, 0x15, 0xcc, 0x31, 0x4a,
	0xe4, 0xe2, 0x0a, 0xca, 0x2f, 0x2d, 0x49, 0x75, 0x2f, 0xcd, 0x4c, 0x49, 0x15, 0xd2, 0xe3, 0x62,
	0x0b, 0xce, 0x4c, 0xcf, 0x0b, 0x2d, 0x10, 0xe2, 0xd2, 0x03, 0x39, 0x4a, 0x0f, 0x64, 0xa9, 0x94,
	0x98, 0x1e, 0xc4, 0x69, 0x7a, 0x30, 0xa7, 0xe9, 0xb9, 0x82, 0x9c, 0xa6, 0xc4, 0x20, 0xa4, 0x0c,
	0x51, 0xef, 0x99, 0x87, 0xa2, 0x9e, 0x1b, 0xc2, 0x06, 0x5b, 0xab, 0xc4, 0x90, 0xc4, 0x06, 0xd6,
	0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xae, 0x81, 0xbd, 0xfa, 0x00, 0x00, 0x00,
}
